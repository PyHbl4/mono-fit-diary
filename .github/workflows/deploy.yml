name: Deploy to VDS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma client
      run: cd apps/fitdiary-api && npx prisma generate

    - name: Build project
      run: npm run build

    - name: Create .env file
      run: |
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" > apps/fitdiary-api/.env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> apps/fitdiary-api/.env
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> apps/fitdiary-api/.env
        echo "PORT=3000" >> apps/fitdiary-api/.env

    - name: Copy files to VDS
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.VDS_HOST }}
        port: ${{ secrets.VDS_PORT }}
        username: ${{ secrets.VDS_USERNAME }}
        key: ${{ secrets.VDS_SSH_KEY }}
        source: "apps/fitdiary-api/dist/*, apps/fitdiary-api/.env"
        target: "~/fit-diary-api"

    - name: Check files in target directory
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VDS_HOST }}
        port: ${{ secrets.VDS_PORT }}
        username: ${{ secrets.VDS_USERNAME }}
        key: ${{ secrets.VDS_SSH_KEY }}
        script: |
          cd ~/fit-diary-api
          ls -la  # Выводим содержимое директории
          cat .env  # Проверяем наличие файла .env

    - name: Deploy to VDS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VDS_HOST }}
        port: ${{ secrets.VDS_PORT }}
        username: ${{ secrets.VDS_USERNAME }}
        key: ${{ secrets.VDS_SSH_KEY }}
        script: |
          cd ~/fit-diary-api
          ls -la
          cat .env
          docker compose config
          docker compose down
          docker compose up --build -d
          docker compose exec -T api npx prisma migrate deploy